import * as GraphQL from "graphql";
import { Option } from "@platform/prelude";
export { name as prefixName, document as prefix } from "./Prefix";
export declare const empty: GraphQL.DocumentNode;
export declare const fromDefinitions: (definitions: readonly GraphQL.DefinitionNode[]) => Option.Option<GraphQL.DocumentNode>;
export declare const render: (document: GraphQL.DocumentNode) => GraphQL.DocumentNode;
export declare const merge: (first: GraphQL.DocumentNode, second: GraphQL.DocumentNode) => GraphQL.DocumentNode;
export declare const mergeObjectTypes: (first: GraphQL.ObjectTypeDefinitionNode, second: Pick<GraphQL.ObjectTypeDefinitionNode, "fields">) => GraphQL.ObjectTypeDefinitionNode;
export declare const findObjectType: (document: GraphQL.DocumentNode, name: string) => Option.Option<GraphQL.ObjectTypeDefinitionNode>;
export declare const findInterfaceType: (document: GraphQL.DocumentNode, name: string) => Option.Option<GraphQL.InterfaceTypeDefinitionNode>;
export declare const findType: (document: GraphQL.DocumentNode, name: string) => Option.Option<GraphQL.TypeDefinitionNode>;
